---

- name: install ES dependencies
  apt: pkg=openjdk-{{ ansible_distribution_version|get_openjdk_version }}-jre-headless state=present update_cache=true cache_valid_time=3600

- name: Check if we've already downloaded the DEB
  stat: path=/tmp/{{ elasticsearch_file_name }}
  register: elasticsearch_downloaded

- name: Check if we've already installed elasticsearch
  stat: path=/usr/share/elasticsearch/lib/elasticsearch-{{ elasticsearch_version }}.jar
  register: elasticsearch_installed

- name: Download ES deb
  get_url: url={{ elasticsearch_file_name|get_major_version|get_elasticsearch_base_url }}/{{ elasticsearch_file_name }} dest=/tmp/{{ elasticsearch_file_name }}
  when: not elasticsearch_downloaded.stat.exists and not elasticsearch_installed.stat.exists

- name: Install elasticsearch
  apt: deb=/tmp/{{ elasticsearch_file_name }} state=present force=yes
  when: not elasticsearch_installed.stat.exists

- name: Install ES plugins
  shell: /usr/share/elasticsearch/bin/plugin {% if elasticsearch_file_name|get_major_version == 1 %}--{% endif %}install {{ item }}
  with_items: "{{ plugins_to_install }}"
  register: plugin_response
  when: elasticsearch_file_name|get_major_version < 5
  failed_when: "'ERROR' in plugin_response.stdout and 'already exists' not in plugin_response.stdout"

- name: write Elasticsearch config
  copy: src={{ elasticsearch_config_file }} dest=/etc/elasticsearch/elasticsearch.yml
  when: elasticsearch_config_file != false

- name: Make ES listen on all interfaces
  lineinfile: 'dest=/etc/elasticsearch/elasticsearch.yml line="network.host: 0.0.0.0" regexp=^network.host'
  when: elasticsearch_listen_on_all_interfaces

- name: Restart ES
  service: >
    name=elasticsearch
    state=restarted
    enabled=yes

- name: wait for Elasticsearch to actually be ready
  wait_for: host=127.0.0.1 port=9200 delay=5 timeout=60
